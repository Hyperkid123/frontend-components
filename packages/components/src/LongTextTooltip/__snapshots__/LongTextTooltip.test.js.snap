// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LongTextTooltip component should render 1`] = `
<LongTextTooltip>
  <span />
</LongTextTooltip>
`;

exports[`LongTextTooltip component should render content 1`] = `
<LongTextTooltip
  content="Lorem Impsum"
>
  <span>
    Lorem Impsum
  </span>
</LongTextTooltip>
`;

exports[`LongTextTooltip component should render content tooltip in a different spot with different width 1`] = `
<LongTextTooltip
  content="Lorem Impsum"
  tooltipMaxWidth="10vw"
  tooltipPosition="left"
>
  <span>
    Lorem Impsum
  </span>
</LongTextTooltip>
`;

exports[`LongTextTooltip component should render content with maxLength 1`] = `
<LongTextTooltip
  content="Lorem Impsum"
  maxLength={50}
>
  <span>
    Lorem Impsum
  </span>
</LongTextTooltip>
`;

exports[`LongTextTooltip component should render content with maxLength shorter than content 1`] = `
<LongTextTooltip
  content="Lorem Impsum"
  maxLength={1}
>
  <Tooltip
    content={
      <div>
        Lorem Impsum
      </div>
    }
    maxWidth="50vw"
    position="top"
  >
    <Popper
      appendTo={[Function]}
      distance={15}
      enableFlip={true}
      flipBehavior={
        [
          "top",
          "right",
          "bottom",
          "left",
          "top",
          "right",
          "bottom",
        ]
      }
      isVisible={false}
      minWidth="revert"
      onBlur={[Function]}
      onDocumentClick={false}
      onDocumentKeyDown={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onPopperMouseEnter={[Function]}
      onPopperMouseLeave={[Function]}
      onTriggerEnter={[Function]}
      placement="top"
      popper={
        <div
          aria-live="off"
          className="pf-v5-c-tooltip"
          id="pf-tooltip-1"
          role="tooltip"
          style={
            {
              "maxWidth": "50vw",
              "opacity": 0,
              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
            }
          }
        >
          <TooltipArrow />
          <TooltipContent
            isLeftAligned={false}
          >
            <div>
              Lorem Impsum
            </div>
          </TooltipContent>
        </div>
      }
      popperRef={
        {
          "current": null,
        }
      }
      positionModifiers={
        {
          "bottom": "pf-m-bottom",
          "bottom-end": "pf-m-bottom-right",
          "bottom-start": "pf-m-bottom-left",
          "left": "pf-m-left",
          "left-end": "pf-m-left-bottom",
          "left-start": "pf-m-left-top",
          "right": "pf-m-right",
          "right-end": "pf-m-right-bottom",
          "right-start": "pf-m-right-top",
          "top": "pf-m-top",
          "top-end": "pf-m-top-right",
          "top-start": "pf-m-top-left",
        }
      }
      trigger={
        <div>
          …
        </div>
      }
      zIndex={9999}
    >
      <div
        style={
          {
            "display": "contents",
          }
        }
      >
        <div>
          …
        </div>
      </div>
    </Popper>
  </Tooltip>
</LongTextTooltip>
`;

exports[`LongTextTooltip component should render tooltip in a different spot 1`] = `
<LongTextTooltip
  content="Lorem Impsum"
  tooltipPosition="bottom"
>
  <span>
    Lorem Impsum
  </span>
</LongTextTooltip>
`;

exports[`LongTextTooltip component should render tooltip in a different spot 2`] = `
<LongTextTooltip
  content="Lorem Impsum"
  tooltipPosition="left"
>
  <span>
    Lorem Impsum
  </span>
</LongTextTooltip>
`;

exports[`LongTextTooltip component should render tooltip in a different spot 3`] = `
<LongTextTooltip
  content="Lorem Impsum"
  tooltipPosition="right"
>
  <span>
    Lorem Impsum
  </span>
</LongTextTooltip>
`;
